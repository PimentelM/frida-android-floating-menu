{"version":3,"sources":["../src/Config.ts","../src/util.ts","../src/Menu.ts","../src/Primitive.ts"],"names":["Html","Color","Config","initCounter","start","counter","lambdaCounter","className","CheckBox","ViewGroup","JInteger","Point","RelativeLayout","RelativeLayout$LayoutParams","LinearLayout","LinearLayout$LayoutParams","ImageView","ImageView$ScaleType","WindowManager$LayoutParams","PixelFormat","ViewGroup$MarginLayoutParams","ViewGroup$LayoutParams","Gravity","View","FrameLayout","TypedValue","Base64","TextView","BitmapFactory","TextUtils$TruncateAt","Typeface","ScrollView","Button","Context","JString","AlertDialog$Builder","Toast","MotionEvent","Switch","ColorStateList","R$attr","Log","SeekBar","Build$VERSION","Build$VERSION_CODES","PorterDuff$Mode","EditText","InputType","TextView$BufferType","WebView","RadioGroup","RadioButton","Intent","Uri","Menu","context","config","launcherIconSize","launcherIconLayoutParams","launcherIconDecodedImg","mHeader","title","titleLayoutParams","subTitle","scrollView","mFooter","hideBtnLayoutParams","hideBtn","view","builder","dialog","which","closeBtnLayoutParams","closeBtn","name","textView","featName","value","min","max","step","linearLayout","seekBar","progress","fromUser","colorStateList","switchView","e","buttonView","isChecked","text","html","webView","options","radioGroup","i","radioButton","btn","url","button","intent","checkbox","layoutParams","collapse","collapseSub","input","chars","fn","onProgressChanged","onStartTrackingTouch","onStopTrackingTouch","menu","initialTouch","initialPosition","motionEvent","x","y","params","rawX","rawY","displayMetrics","result","Primitive","_Primitive"],"mappings":"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","sourcesContent":["const Html = Java.use('android.text.Html');\nconst Color = Java.use('android.graphics.Color');\n\n/**\n * MenuConfig\n * @class A class that contains all the configuration for the menu.\n */\nexport default class Config {\n  public MENU_WIDTH = 290;\n  public MENU_HEIGHT = 210;\n  public MENU_COLLAPSED_ALPHA = 0.7;\n  public MENU_LAUNCHER_ICON_SIZE = 45;\n  public MENU_TITLE_SIZE = 18;\n  public MENU_SUBTITLE_SIZE = 10;\n  public BTN_ON_BG_COLOR = Color.parseColor('#1b5e20');\n  public BTN_OFF_BG_COLOR = Color.parseColor('#7f0000');\n  public CHECKBOX_COLOR = Color.parseColor('#80CBC4');\n  public MENU_CLOSE_BUTTON_TEXT = Html.fromHtml('&#x2715;');\n  public MENU_HIDE_BUTTON_TEXT = Html.fromHtml('&#x25B3;');\n  public MENU_FEATURE_BG_COLOR = Color.parseColor('#DD141C22');\n  public TEXT_COLOR_PRIMARY = Color.parseColor('#82CAFD');\n  public MENU_CATEGORY_BG_COLOR = Color.parseColor('#2F3D4C');\n  public MENU_BG_COLOR = Color.parseColor('#EE1C2A35');\n  public RADIO_BUTTON_COLOR = Color.parseColor('#FFFFFF');\n  public NUMBER_TEXT_COLOR = Color.parseColor('#41c300');\n  public MENU_TITLE = Html.fromHtml('Moded By (your name)');\n  public MENU_BUTTON_BG_COLOR = Color.parseColor('#1C262D');\n  public SEEKBAR_COLOR = Color.parseColor('#80CBC4');\n  public SEEKBAR_PROGRESS_COLOR = Color.parseColor('#80CBC4');\n  public TEXT_COLOR_SECONDARY = Color.parseColor('#FFFFFF');\n  public COLLAPSE_BG_COLOR = Color.parseColor('#222D38');\n\n  public MENU_SUBTITLE = Html.fromHtml('https://site.com lorem ipsum dolor sit amet consectetur adipiscing elit');\n\n  /**\n   *Base 64 encoded image of the launcher icon.\n   */\n  public MENU_LAUNCHER_ICON =\n    '';\n}\n","/** @internal */\nexport function initCounter(start = 0) {\n  let counter = start;\n  return () => counter++;\n}\n","import Config from './Config.js';\nimport { initCounter } from './util.js';\nimport type Primitive from './Primitive.js';\n\nconst lambdaCounter = initCounter();\n\nconst className = 'com.maars.fmenu.Menu';\n\nconst CheckBox = Java.use('android.widget.CheckBox');\nconst ViewGroup = Java.use('android.view.ViewGroup');\nconst JInteger = Java.use('java.lang.Integer');\nconst Point = Java.use('android.graphics.Point');\nconst RelativeLayout = Java.use('android.widget.RelativeLayout');\nconst RelativeLayout$LayoutParams = Java.use('android.widget.RelativeLayout$LayoutParams');\nconst LinearLayout = Java.use('android.widget.LinearLayout');\nconst LinearLayout$LayoutParams = Java.use('android.widget.LinearLayout$LayoutParams');\nconst ImageView = Java.use('android.widget.ImageView');\nconst ImageView$ScaleType = Java.use('android.widget.ImageView$ScaleType');\nconst WindowManager$LayoutParams = Java.use('android.view.WindowManager$LayoutParams');\nconst PixelFormat = Java.use('android.graphics.PixelFormat');\nconst ViewGroup$MarginLayoutParams = Java.use('android.view.ViewGroup$MarginLayoutParams');\nconst ViewGroup$LayoutParams = Java.use('android.view.ViewGroup$LayoutParams');\nconst Gravity = Java.use('android.view.Gravity');\nconst View = Java.use('android.view.View');\nconst FrameLayout = Java.use('android.widget.FrameLayout');\nconst TypedValue = Java.use('android.util.TypedValue');\nconst Base64 = Java.use('android.util.Base64');\nconst TextView = Java.use('android.widget.TextView');\nconst BitmapFactory = Java.use('android.graphics.BitmapFactory');\nconst TextUtils$TruncateAt = Java.use('android.text.TextUtils$TruncateAt');\nconst Typeface = Java.use('android.graphics.Typeface');\nconst ScrollView = Java.use('android.widget.ScrollView');\nconst Button = Java.use('android.widget.Button');\nconst Context = Java.use('android.content.Context');\nconst JString = Java.use('java.lang.String');\nconst AlertDialog$Builder = Java.use('android.app.AlertDialog$Builder');\nconst Toast = Java.use('android.widget.Toast');\nconst MotionEvent = Java.use('android.view.MotionEvent');\nconst Html = Java.use('android.text.Html');\nconst Switch = Java.use('android.widget.Switch');\nconst ColorStateList = Java.use('android.content.res.ColorStateList');\nconst R$attr = Java.use('android.R$attr');\nconst Color = Java.use('android.graphics.Color');\nconst Log = Java.use('android.util.Log');\nconst SeekBar = Java.use('android.widget.SeekBar');\nconst Build$VERSION = Java.use('android.os.Build$VERSION');\nconst Build$VERSION_CODES = Java.use('android.os.Build$VERSION_CODES');\nconst PorterDuff$Mode = Java.use('android.graphics.PorterDuff$Mode');\nconst EditText = Java.use('android.widget.EditText');\nconst InputType = Java.use('android.text.InputType');\nconst TextView$BufferType = Java.use('android.widget.TextView$BufferType');\nconst WebView = Java.use('android.webkit.WebView');\nconst RadioGroup = Java.use('android.widget.RadioGroup');\nconst RadioButton = Java.use('android.widget.RadioButton');\nconst Intent = Java.use('android.content.Intent');\nconst Uri = Java.use('android.net.Uri');\n\n/**\n * @class Menu\n * @classdesc Floating menu\n */\nexport default class Menu {\n  private readonly config: Config;\n  private readonly position: Java.Wrapper;\n  private isCollapsed: boolean;\n  private readonly mCollapsed: Java.Wrapper;\n  private readonly mExpanded: Java.Wrapper;\n  private readonly featureView: Java.Wrapper;\n  private readonly launcherIcon: Java.Wrapper;\n  private readonly rootFrame: Java.Wrapper;\n  private curCollapse: Java.Wrapper | null;\n  private windowManager!: Java.Wrapper;\n  private readonly wmParams: Java.Wrapper;\n\n  /**\n   * @param context - Android context\n   * @param  config - Configuration\n   * @example\n   * const menu = new Menu(context);\n   * menu.attach()\n   *\n   * @example\n   * const config = new Config();\n   * config.MENU_TITLE = \"Moded with Frida\";\n   * const menu = new Menu(context, config);\n   * menu.attach()\n   */\n  constructor(private readonly context: Java.Wrapper, config = new Config()) {\n    this.config = config;\n    this.isCollapsed = true;\n    this.curCollapse = null;\n    this.rootFrame = FrameLayout.$new(context);\n    this.position = Point.$new(0, 0);\n    this.mCollapsed = RelativeLayout.$new(context);\n    this.mExpanded = LinearLayout.$new(context);\n    this.launcherIcon = ImageView.$new(context);\n    this.featureView = LinearLayout.$new(context);\n    this.wmParams = WindowManager$LayoutParams.$new(\n      ViewGroup$LayoutParams.WRAP_CONTENT.value,\n      ViewGroup$LayoutParams.WRAP_CONTENT.value,\n      WindowManager$LayoutParams.TYPE_APPLICATION.value,\n      WindowManager$LayoutParams.FLAG_NOT_FOCUSABLE.value |\n        WindowManager$LayoutParams.FLAG_LAYOUT_IN_OVERSCAN.value |\n        WindowManager$LayoutParams.FLAG_LAYOUT_IN_SCREEN.value |\n        WindowManager$LayoutParams.FLAG_SPLIT_TOUCH.value,\n      PixelFormat.TRANSPARENT.value,\n    );\n\n    this.init();\n  }\n\n  /** @internal */\n  private init(): void {\n    this.rootFrame.setOnTouchListener(this.View$OnTouchListener());\n    this.rootFrame.setLayoutParams(\n      ViewGroup$LayoutParams.$new(ViewGroup$LayoutParams.WRAP_CONTENT.value, ViewGroup$LayoutParams.WRAP_CONTENT.value),\n    );\n\n    this.featureView.setOrientation(LinearLayout.VERTICAL.value);\n    this.wmParams.gravity.value = Gravity.TOP.value | Gravity.START.value;\n    this.wmParams.x.value = this.position.x.value;\n    this.wmParams.y.value = this.position.y.value;\n\n    this.mCollapsed.setVisibility(View.VISIBLE.value);\n    this.mCollapsed.setAlpha(this.config.MENU_COLLAPSED_ALPHA);\n\n    this.mExpanded.setVisibility(View.GONE.value);\n    this.mExpanded.setBackgroundColor(this.config.MENU_BG_COLOR);\n    this.mExpanded.setOrientation(LinearLayout.VERTICAL.value);\n    this.mExpanded.setLayoutParams(\n      LinearLayout$LayoutParams.$new(this.dp(this.config.MENU_WIDTH), ViewGroup$LayoutParams.WRAP_CONTENT.value),\n    );\n\n    this.launcherIcon.setScaleType(ImageView$ScaleType.FIT_XY.value);\n    this.launcherIcon.setLayoutParams(\n      RelativeLayout$LayoutParams.$new(\n        ViewGroup$LayoutParams.WRAP_CONTENT.value,\n        ViewGroup$LayoutParams.WRAP_CONTENT.value,\n      ),\n    );\n    const launcherIconSize = this.dp(this.config.MENU_LAUNCHER_ICON_SIZE);\n    const launcherIconLayoutParams = this.launcherIcon.getLayoutParams();\n    launcherIconLayoutParams.width.value = launcherIconSize;\n    launcherIconLayoutParams.height.value = launcherIconSize;\n    const launcherIconDecodedImg = Base64.decode(this.config.MENU_LAUNCHER_ICON, Base64.DEFAULT.value);\n    this.launcherIcon.setImageBitmap(\n      BitmapFactory.decodeByteArray(launcherIconDecodedImg, 0, launcherIconDecodedImg.length),\n    );\n    Java.cast(launcherIconLayoutParams, ViewGroup$MarginLayoutParams).topMargin.value = this.convertDipToPixels(10);\n    this.launcherIcon.setOnTouchListener(this.View$OnTouchListener());\n    this.launcherIcon.setOnClickListener(this.View$OnClickListener(() => this.expandMenu()));\n\n    const mHeader = RelativeLayout.$new(this.context);\n    mHeader.setPadding(10, 5, 10, 5);\n    mHeader.setVerticalGravity(Gravity.CENTER_VERTICAL.value);\n\n    const title = TextView.$new(this.context);\n    title.setText(this.config.MENU_TITLE);\n    title.setTextColor(this.config.TEXT_COLOR_PRIMARY);\n    title.setTypeface(null, Typeface.BOLD.value);\n    title.setTextSize(this.config.MENU_TITLE_SIZE);\n    title.setGravity(Gravity.CENTER.value);\n    const titleLayoutParams = RelativeLayout$LayoutParams.$new(\n      ViewGroup$LayoutParams.WRAP_CONTENT.value,\n      ViewGroup$LayoutParams.WRAP_CONTENT.value,\n    );\n    titleLayoutParams.addRule(RelativeLayout.CENTER_HORIZONTAL.value);\n    title.setLayoutParams(titleLayoutParams);\n\n    const subTitle = TextView.$new(this.context);\n    subTitle.setText(this.config.MENU_SUBTITLE);\n    subTitle.setEllipsize(TextUtils$TruncateAt.MARQUEE.value);\n    subTitle.setMarqueeRepeatLimit(-1);\n    subTitle.setSingleLine(true);\n    subTitle.setSelected(true);\n    subTitle.setTextColor(this.config.TEXT_COLOR_PRIMARY);\n    subTitle.setTextSize(this.config.MENU_SUBTITLE_SIZE);\n    subTitle.setGravity(Gravity.CENTER.value);\n    subTitle.setPadding(0, 0, 0, 5);\n\n    const scrollView = ScrollView.$new(this.context);\n    scrollView.setBackgroundColor(this.config.MENU_FEATURE_BG_COLOR);\n    scrollView.setLayoutParams(\n      LinearLayout$LayoutParams.$new(ViewGroup$LayoutParams.MATCH_PARENT.value, this.dp(this.config.MENU_HEIGHT)),\n    );\n\n    const mFooter = RelativeLayout.$new(this.context);\n    mFooter.setPadding(10, 3, 10, 3);\n    mFooter.setVerticalGravity(Gravity.CENTER.value);\n\n    const hideBtnLayoutParams = RelativeLayout$LayoutParams.$new(\n      ViewGroup$LayoutParams.WRAP_CONTENT.value,\n      ViewGroup$LayoutParams.WRAP_CONTENT.value,\n    );\n    hideBtnLayoutParams.addRule(RelativeLayout.ALIGN_PARENT_LEFT.value);\n\n    const hideBtn = Button.$new(this.context);\n    hideBtn.setText(this.config.MENU_HIDE_BUTTON_TEXT);\n    hideBtn.setTextColor(this.config.TEXT_COLOR_PRIMARY);\n    hideBtn.setLayoutParams(hideBtnLayoutParams);\n    hideBtn.setBackgroundColor(Color.TRANSPARENT.value);\n    hideBtn.setOnClickListener(\n      this.View$OnClickListener((view) => {\n        const builder = AlertDialog$Builder.$new(this.context);\n        builder.setTitle(JString.$new('Are you sure you want to hide the menu?'));\n        builder.setMessage(\n          JString.$new('You can always show it again by clicking on the icon. Remember the hidden icon position.'),\n        );\n        builder.setPositiveButton(\n          JString.$new('Yes'),\n          this.DialogInterface$OnClickListener((dialog, which) => {\n            this.hideMenu();\n            Toast.makeText(this.context, JString.$new('Menu hidden'), Toast.LENGTH_SHORT.value).show();\n          }),\n        );\n\n        builder.setNegativeButton(\n          JString.$new('No'),\n          this.DialogInterface$OnClickListener((dialog, which) => {\n            // Do nothing\n          }),\n        );\n\n        const dialog = builder.create();\n        dialog.show();\n      }),\n    );\n\n    hideBtn.setOnLongClickListener(\n      this.View$OnLongClickListener((view) => {\n        const builder = AlertDialog$Builder.$new(this.context);\n        builder.setTitle(JString.$new('Are you sure you want to kill the menu?'));\n        builder.setMessage(\n          JString.$new(\n            'Killing the menu will remove it from the screen. You can always restart the app to get it back.',\n          ),\n        );\n        builder.setPositiveButton(\n          JString.$new('Yes'),\n          this.DialogInterface$OnClickListener((dialog, which) => {\n            this.killMenu();\n            Toast.makeText(this.context, JString.$new('Menu killed'), Toast.LENGTH_SHORT.value).show();\n          }),\n        );\n\n        builder.setNegativeButton(\n          JString.$new('No'),\n          this.DialogInterface$OnClickListener((dialog, which) => {\n            // Do nothing\n          }),\n        );\n\n        const dialog = builder.create();\n        dialog.show();\n      }),\n    );\n\n    const closeBtnLayoutParams = RelativeLayout$LayoutParams.$new(\n      ViewGroup$LayoutParams.WRAP_CONTENT.value,\n      ViewGroup$LayoutParams.WRAP_CONTENT.value,\n    );\n    closeBtnLayoutParams.addRule(RelativeLayout.ALIGN_PARENT_RIGHT.value);\n\n    const closeBtn = Button.$new(this.context);\n    closeBtn.setText(this.config.MENU_CLOSE_BUTTON_TEXT);\n    closeBtn.setTextColor(this.config.TEXT_COLOR_PRIMARY);\n    closeBtn.setLayoutParams(closeBtnLayoutParams);\n    closeBtn.setBackgroundColor(Color.TRANSPARENT.value);\n    closeBtn.setOnClickListener(\n      this.View$OnClickListener((view) => {\n        this.collapseMenu();\n        Toast.makeText(this.context, JString.$new('Menu closed'), Toast.LENGTH_SHORT.value).show();\n      }),\n    );\n\n    mHeader.addView(title);\n    scrollView.addView(this.featureView);\n\n    mFooter.addView(hideBtn);\n    mFooter.addView(closeBtn);\n\n    this.mExpanded.addView(mHeader);\n    this.mExpanded.addView(subTitle);\n    this.mExpanded.addView(scrollView);\n    this.mExpanded.addView(mFooter);\n\n    this.mCollapsed.addView(this.launcherIcon);\n\n    this.rootFrame.addView(this.mCollapsed);\n    this.rootFrame.addView(this.mExpanded);\n  }\n\n  /**\n   * Attaches the menu to the screen.\n   */\n  public attach(): void {\n    Java.scheduleOnMainThread(() => {\n      this.windowManager = Java.cast(\n        this.context.getSystemService(Context.WINDOW_SERVICE.value),\n        Java.use('android.view.ViewManager'),\n      );\n      this.windowManager.addView(this.rootFrame, this.wmParams);\n    });\n  }\n\n  /** @internal */\n  private collapseMenu(): void {\n    this.isCollapsed = true;\n    this.mExpanded.setVisibility(View.GONE.value);\n    this.mCollapsed.setVisibility(View.VISIBLE.value);\n    this.mCollapsed.setAlpha(this.config.MENU_COLLAPSED_ALPHA);\n  }\n\n  /** @internal */\n  private expandMenu(): void {\n    this.isCollapsed = false;\n    this.mCollapsed.setVisibility(View.GONE.value);\n    this.mExpanded.setVisibility(View.VISIBLE.value);\n  }\n\n  /** @internal */\n  private hideMenu(): void {\n    this.isCollapsed = true;\n    this.mCollapsed.setVisibility(View.VISIBLE.value);\n    this.mCollapsed.setAlpha(0);\n    this.mExpanded.setVisibility(View.GONE.value);\n  }\n\n  /** @internal */\n  private killMenu(): void {\n    this.windowManager.removeView(this.rootFrame);\n  }\n\n  /** @internal */\n  private addFeature(view: Java.Wrapper): void {\n    Java.scheduleOnMainThread(() => {\n      if (this.curCollapse === null) this.featureView.addView(view);\n      else this.curCollapse.addView(view);\n    });\n  }\n\n  /**\n   * Add a category section to the menu.\n   * @param name The name of the category.\n   * @example\n   * menu.Category('Player');\n   */\n  public Category(name: string): void {\n    const textView = TextView.$new(this.context);\n    textView.setBackgroundColor(this.config.MENU_CATEGORY_BG_COLOR);\n    textView.setText(Html.fromHtml(name));\n    textView.setTextColor(this.config.TEXT_COLOR_SECONDARY);\n    textView.setGravity(Gravity.CENTER.value);\n    textView.setTypeface(null, Typeface.BOLD.value);\n    textView.setPadding(0, 5, 0, 5);\n\n    this.addFeature(textView);\n  }\n\n  /**\n   * Add a slider to the menu.\n   * @param featName The name of the feature.\n   * @param value The pointer to the value of the feature.\n   * @param min The minimum value slider can be set to.\n   * @param max The maximum value slider can be set to.\n   * @param step The step size of the slider.\n   * @throws Error if value is not between min and max.\n   * @throws Error if step is less than 1.\n   * @throws Error if step is not a divisor of (max - min).\n   * @throws Error if min is greater than max.\n   * @example\n   * const speed = Primitive.of(50);\n   * menu.SeekBar('Speed', speed, 0, 100);\n   * menu.SeekBar('Speed', speed, 0, 100, 5);\n   */\n  public SeekBar(featName: string, value: Primitive<number>, min: number, max: number, step = 1): void {\n    if (value.get() < min || value.get() > max) throw new Error('Value must be between min and max');\n    if (step < 1) throw new Error('Step must be greater than 0');\n    if ((max - min) % step != 0) throw new Error('Step must be a divisor of (max - min)');\n    if (min > max) throw new Error('Min must be less than max');\n\n    const linearLayout = LinearLayout.$new(this.context);\n    linearLayout.setPadding(0, 5, 0, 5);\n    linearLayout.setOrientation(LinearLayout.VERTICAL.value);\n    linearLayout.setGravity(Gravity.CENTER.value);\n\n    const textView = TextView.$new(this.context);\n    textView.setText(\n      Html.fromHtml(featName + \": <font color='\" + this.config.NUMBER_TEXT_COLOR + \"'>\" + value.get() + '</font>'),\n    );\n    textView.setTextColor(this.config.TEXT_COLOR_SECONDARY);\n    textView.setHighlightColor(this.config.TEXT_COLOR_SECONDARY);\n    textView.setHintTextColor(this.config.TEXT_COLOR_SECONDARY);\n\n    const seekBar = SeekBar.$new(this.context);\n    seekBar.setMax((max - min) / step);\n    if (Build$VERSION.SDK_INT.value >= Build$VERSION_CODES.O.value) seekBar.setMin(0);\n    seekBar.setPadding(35, 10, 35, 10);\n    seekBar.setProgress(value.get());\n    seekBar.getThumb().setColorFilter(this.config.SEEKBAR_COLOR, PorterDuff$Mode.SRC_ATOP.value);\n    seekBar.getProgressDrawable().setColorFilter(this.config.SEEKBAR_PROGRESS_COLOR, PorterDuff$Mode.SRC_ATOP.value);\n\n    seekBar.setOnSeekBarChangeListener(\n      this.SeekBar$OnSeekBarChangeListener({\n        onProgressChanged: (seekBar, progress, fromUser) => {\n          value.set(progress * step + min);\n          textView.setText(\n            Html.fromHtml(\n              featName + \": <font color='\" + this.config.NUMBER_TEXT_COLOR + \"'>\" + value.get() + '</font>',\n            ),\n          );\n        },\n      }),\n    );\n\n    linearLayout.addView(textView);\n    linearLayout.addView(seekBar);\n\n    this.addFeature(linearLayout);\n  }\n\n  /**\n   * Add a switch to the menu.\n   * @param featName The name of the feature.\n   * @param value The pointer to the value of the feature.\n   * @example\n   * const isGodmode = Primitive.of(false);\n   * menu.Switch('Godmode', isGodmode);\n   */\n  public Switch(featName: string, value: Primitive<boolean>): void {\n    const colorStateList = ColorStateList.$new(\n      [[-R$attr.state_enabled.value], [R$attr.state_checked.value], []],\n      [Color.BLUE.value, Color.GREEN.value, Color.RED.value],\n    );\n\n    const switchView = Switch.$new(this.context);\n    switchView.setText(Html.fromHtml(featName));\n    switchView.setTextColor(this.config.TEXT_COLOR_SECONDARY);\n    switchView.setPadding(10, 5, 0, 5);\n    switchView.setChecked(value.get());\n\n    try {\n      switchView.getThumbDrawable().setTintList(colorStateList);\n      switchView.getTrackDrawable().setTintList(colorStateList);\n    } catch (e) {\n      Log.e('Error setting tint list for switch', e);\n      console.error(e);\n      switchView.setTrackResource(0x7f0800a0);\n      switchView.setThumbResource(0x7f0800a1);\n    }\n\n    switchView.setOnCheckedChangeListener(\n      this.CompoundButton$OnCheckedChangeListener((buttonView, isChecked) => {\n        value.set(isChecked);\n      }),\n    );\n\n    this.addFeature(switchView);\n  }\n\n  /**\n   * Add a text view to the menu.\n   * note: this does not fully support html. Use {@link menu.WebTextView}\n   * @param text The text to display.\n   * @example\n   * menu.TextView('Hello world!');\n   * menu.TextView('Hello <b>world</b>!');\n   * menu.TextView('Hello <font color=\"#ff0000\">world</font>!');\n   */\n  public TextView(text: string): void {\n    const textView = TextView.$new(this.context);\n    textView.setText(Html.fromHtml(text));\n    textView.setTextColor(this.config.TEXT_COLOR_SECONDARY);\n    textView.setPadding(10, 5, 10, 5);\n\n    this.addFeature(textView);\n  }\n\n  /**\n   * Add a web text view with full html support to the menu.\n   * @param html The html to display.\n   * @example\n   * menu.WebTextView('<b>Hello world!</b>');\n   * menu.WebTextView('<font color=\"#ff0000\">Hello world!</font>');\n   * menu.WebTextView('<font size=\"20\">Hello world!</font>');\n   */\n  public WebTextView(html: string): void {\n    Java.scheduleOnMainThread(() => {\n      const webView = WebView.$new(this.context);\n      webView.loadData(html, 'text/html', 'UTF-8');\n      webView.setBackgroundColor(Color.TRANSPARENT.value);\n      webView.setPadding(0, 5, 0, 5);\n      webView.getSettings().setDatabaseEnabled(false);\n\n      this.addFeature(webView);\n    });\n  }\n\n  /**\n   * Add a RadioGroup to the menu.\n   * @param featName The name of the feature.\n   * @param value The pointer to the value of the feature.\n   * @param options The options to display.\n   * @example\n   * const value = Primitive.of(0);\n   * const options = ['Option 1', 'Option 2', 'Option 3'];\n   * menu.RadioButton('Options', value, options);\n   */\n  public RadioButton(featName: string, value: Primitive<number>, options: string[]): void {\n    if (options.length < 2) throw new Error('Options must be at least 2');\n    if (value.get() < 0 || value.get() >= options.length) {\n      throw new Error('Value must be between 0 and options.length');\n    }\n\n    const textView = TextView.$new(this.context);\n    textView.setText(\n      Html.fromHtml(\n        featName + \": <font color='\" + this.config.NUMBER_TEXT_COLOR + \"'>\" + options[value.get()] + '</font>',\n      ),\n    );\n    textView.setTextColor(this.config.TEXT_COLOR_SECONDARY);\n\n    const radioGroup = RadioGroup.$new(this.context);\n    radioGroup.setPadding(10, 5, 10, 5);\n    radioGroup.setOrientation(LinearLayout.VERTICAL.value);\n    Java.cast(radioGroup, ViewGroup).addView(textView);\n\n    for (let i = 0; i < options.length; i++) {\n      const radioButton = RadioButton.$new(this.context);\n      radioButton.setText(JString.$new(options[i]));\n      radioButton.setTextColor(Color.LTGRAY.value);\n      // @ts-ignore\n      radioButton.setButtonTintList(ColorStateList.valueOf(this.config.RADIO_BUTTON_COLOR));\n      radioButton.setId(i);\n      Java.cast(radioGroup, ViewGroup).addView(radioButton);\n\n      radioButton.setOnCheckedChangeListener(\n        this.CompoundButton$OnCheckedChangeListener((buttonView, isChecked) => {\n          if (isChecked) {\n            value.set(buttonView.getId());\n            textView.setText(\n              Html.fromHtml(\n                featName + \": <font color='\" + this.config.NUMBER_TEXT_COLOR + \"'>\" + options[value.get()] + '</font>',\n              ),\n            );\n          }\n        }),\n      );\n\n      if (i === value.get()) radioButton.setChecked(true);\n    }\n\n    this.addFeature(radioGroup);\n  }\n\n  /**\n   * Add a on/off button to the menu.\n   * @param featName The name of the feature.\n   * @param value The pointer to the value of the feature.\n   * @example\n   * const isGodMode = Primitive.of(false);\n   * menu.ButtonOnOff('Feature', isGodMode);\n   */\n  public ButtonOnOff(featName: string, value: Primitive<boolean>) {\n    const btn = this.Button(featName);\n    btn.setText(Html.fromHtml(featName + ': ' + (value.get() ? 'ON' : 'OFF')));\n    btn.setBackgroundColor(value.get() ? this.config.BTN_ON_BG_COLOR : this.config.BTN_OFF_BG_COLOR);\n\n    btn.setOnClickListener(\n      this.View$OnClickListener(() => {\n        value.set(!value.get());\n        btn.setText(Html.fromHtml(featName + ': ' + (value.get() ? 'ON' : 'OFF')));\n        btn.setBackgroundColor(value.get() ? this.config.BTN_ON_BG_COLOR : this.config.BTN_OFF_BG_COLOR);\n      }),\n    );\n\n    this.addFeature(btn);\n  }\n\n  /**\n   * Add a button that opens a url to the menu.\n   * @param text The text to display.\n   * @param url The url to open.\n   * @example\n   * menu.ButtonLink('Discord', 'https://discord.gg/abc123');\n   * menu.ButtonLink('Website', 'https://example.com');\n   */\n  public ButtonLink(text: string, url: string): void {\n    const button = this.Button(text);\n    button.setOnClickListener(\n      this.View$OnClickListener(() => {\n        const intent = Intent.$new(Intent.ACTION_VIEW.value, Uri.parse(url));\n        this.context.startActivity(intent);\n      }),\n    );\n\n    this.addFeature(button);\n  }\n\n  /**\n   * Add a CheckBox to the menu.\n   * @param featName The name of the feature.\n   * @param value The pointer to the value of the feature.\n   * @example\n   * const isGodMode = Primitive.of(false);\n   * menu.CheckBox('God Mode', isGodMode);\n   */\n  public CheckBox(featName: string, value: Primitive<boolean>): void {\n    const checkbox = CheckBox.$new(this.context);\n    checkbox.setText(Html.fromHtml(featName));\n    checkbox.setTextColor(this.config.TEXT_COLOR_SECONDARY);\n    // @ts-ignore\n    checkbox.setButtonTintList(ColorStateList.valueOf(this.config.CHECKBOX_COLOR));\n    checkbox.setOnCheckedChangeListener(\n      this.CompoundButton$OnCheckedChangeListener((buttonView, isChecked) => {\n        value.set(isChecked);\n      }),\n    );\n\n    this.addFeature(checkbox);\n  }\n\n  /**\n   * Starts a new collapse\n   * Every feature added after this will be added to the collapse until endCollapse is called\n   * @param title The title of the collapse\n   * @throws If there is already a collapse active\n   **/\n  public startCollapse(title: string) {\n    if (this.curCollapse !== null) throw new Error('Cannot start a collapse while another is active');\n    this.curCollapse = this.Collapse(title);\n  }\n\n  /**\n   * Ends the current collapse and adds it to the menu\n   * @throws {Error} If there is no collapse active\n   **/\n  public endCollapse() {\n    if (this.curCollapse === null) throw new Error('You must start a collapse before ending it');\n    this.featureView.addView(this.curCollapse);\n    this.curCollapse = null;\n  }\n\n  /** @internal */\n  private Collapse(title: string) {\n    const layoutParams = LinearLayout$LayoutParams.$new(\n      ViewGroup$LayoutParams.MATCH_PARENT.value,\n      ViewGroup$LayoutParams.MATCH_PARENT.value,\n    );\n    layoutParams.setMargins(0, 5, 0, 5);\n\n    const collapse = LinearLayout.$new(this.context);\n    collapse.setLayoutParams(layoutParams);\n    collapse.setVerticalGravity(Gravity.CENTER.value);\n    collapse.setOrientation(LinearLayout.VERTICAL.value);\n\n    const collapseSub = LinearLayout.$new(this.context);\n    collapseSub.setVerticalGravity(Gravity.CENTER.value);\n    collapseSub.setPadding(0, 5, 0, 5);\n    collapseSub.setOrientation(LinearLayout.VERTICAL.value);\n    collapseSub.setBackgroundColor(this.config.COLLAPSE_BG_COLOR);\n    collapseSub.setVisibility(View.GONE.value);\n\n    const textView = TextView.$new(this.context);\n    textView.setBackgroundColor(this.config.MENU_CATEGORY_BG_COLOR);\n    textView.setText(Html.fromHtml('▽ ' + title + ' ▽'));\n    textView.setGravity(Gravity.CENTER.value);\n    textView.setTextColor(this.config.TEXT_COLOR_SECONDARY);\n    textView.setTypeface(null, Typeface.BOLD.value);\n    textView.setPadding(0, 20, 0, 20);\n\n    textView.setOnClickListener(\n      this.View$OnClickListener((view) => {\n        if (collapseSub.getVisibility() == View.GONE.value) {\n          collapseSub.setVisibility(View.VISIBLE.value);\n          textView.setText(Html.fromHtml('△ ' + title + ' △'));\n        } else {\n          collapseSub.setVisibility(View.GONE.value);\n          textView.setText(Html.fromHtml('▽ ' + title + ' ▽'));\n        }\n      }),\n    );\n\n    collapse.addView(textView);\n    collapse.addView(collapseSub);\n    this.featureView.addView(collapse);\n\n    return collapseSub;\n  }\n\n  /**\n   * Add a feature to the menu.\n   * @param featName The name of the feature.\n   * @param value The pointer to the value of the feature.\n   * @example\n   * const coins = Primitive.of(0);\n   * menu.InputNumber('Coins', coins);\n   */\n  public InputNumber(featName: string, value: Primitive<number>) {\n    const layoutParams = LinearLayout$LayoutParams.$new(\n      ViewGroup$LayoutParams.MATCH_PARENT.value,\n      ViewGroup$LayoutParams.MATCH_PARENT.value,\n    );\n    layoutParams.setMargins(7, 5, 7, 5);\n\n    const linearLayout = LinearLayout.$new(this.context);\n\n    const button = Button.$new(this.context);\n    button.setText(\n      Html.fromHtml(featName + \": <font color='\" + this.config.NUMBER_TEXT_COLOR + \"'>\" + value.get() + '</font>'),\n    );\n    button.setAllCaps(false);\n    button.setLayoutParams(layoutParams);\n    button.setBackgroundColor(this.config.MENU_BUTTON_BG_COLOR);\n    button.setTextColor(this.config.TEXT_COLOR_SECONDARY);\n\n    button.setOnClickListener(\n      this.View$OnClickListener((view) => {\n        const builder = AlertDialog$Builder.$new(this.context);\n        builder.setTitle(JString.$new(featName));\n\n        const input = EditText.$new(this.context);\n        input.setInputType(InputType.TYPE_CLASS_NUMBER.value);\n        input.setText(JString.$new(value.get().toString()), TextView$BufferType.EDITABLE.value);\n        builder.setView(input);\n\n        builder.setPositiveButton(\n          JString.$new('OK'),\n          this.DialogInterface$OnClickListener((dialog, which) => {\n            try {\n              const chars = Java.cast(input.getText(), Java.use('java.lang.CharSequence'));\n              value.set(JInteger.parseInt(chars.toString()));\n              button.setText(\n                Html.fromHtml(\n                  featName + \": <font color='\" + this.config.NUMBER_TEXT_COLOR + \"'>\" + value.get() + '</font>',\n                ),\n              );\n            } catch (e) {\n              Toast.makeText(this.context, JString.$new('Invalid number'), Toast.LENGTH_SHORT.value).show();\n            }\n          }),\n        );\n        builder.setNegativeButton(\n          JString.$new('Cancel'),\n          this.DialogInterface$OnClickListener((dialog, which) => {\n            dialog.cancel();\n          }),\n        );\n\n        builder.show();\n      }),\n    );\n\n    linearLayout.addView(button);\n    this.addFeature(linearLayout);\n  }\n\n  /**\n   * Add a feature to the menu.\n   * @param featName The name of the feature.\n   * @param value The pointer to the value of the feature.\n   * @example\n   * const playerName = Primitive.of('My Player');\n   * menu.InputText('Player Name', playerName);\n   */\n  public InputText(featName: string, value: Primitive<string>) {\n    const layoutParams = LinearLayout$LayoutParams.$new(\n      ViewGroup$LayoutParams.MATCH_PARENT.value,\n      ViewGroup$LayoutParams.MATCH_PARENT.value,\n    );\n    layoutParams.setMargins(7, 5, 7, 5);\n\n    const linearLayout = LinearLayout.$new(this.context);\n\n    const button = Button.$new(this.context);\n    button.setText(\n      Html.fromHtml(featName + \": <font color='\" + this.config.NUMBER_TEXT_COLOR + \"'>\" + value.get() + '</font>'),\n    );\n    button.setAllCaps(false);\n    button.setLayoutParams(layoutParams);\n    button.setBackgroundColor(this.config.MENU_BUTTON_BG_COLOR);\n    button.setTextColor(this.config.TEXT_COLOR_SECONDARY);\n\n    button.setOnClickListener(\n      this.View$OnClickListener((view) => {\n        const builder = AlertDialog$Builder.$new(this.context);\n        builder.setTitle(JString.$new(featName));\n\n        const input = EditText.$new(this.context);\n        input.setInputType(InputType.TYPE_CLASS_TEXT.value);\n        input.setText(JString.$new(value.get()), TextView$BufferType.EDITABLE.value);\n        builder.setView(input);\n\n        builder.setPositiveButton(\n          JString.$new('OK'),\n          this.DialogInterface$OnClickListener((dialog, which) => {\n            const chars = Java.cast(input.getText(), Java.use('java.lang.CharSequence'));\n            value.set(chars.toString());\n            button.setText(\n              Html.fromHtml(\n                featName + \": <font color='\" + this.config.NUMBER_TEXT_COLOR + \"'>\" + value.get() + '</font>',\n              ),\n            );\n          }),\n        );\n        builder.setNegativeButton(\n          JString.$new('Cancel'),\n          this.DialogInterface$OnClickListener((dialog, which) => {\n            dialog.cancel();\n          }),\n        );\n\n        builder.show();\n      }),\n    );\n\n    linearLayout.addView(button);\n    this.addFeature(linearLayout);\n  }\n\n  /**\n   * Add a feature to the menu.\n   * @param featName The name of the feature.\n   * @param fn The function to be called when the button is pressed.\n   * @example\n   * menu.ButtonAction('Kill All', () => {\n   *  // Kill all players\n   * });\n   */\n  public ButtonAction(featName: string, fn: () => void): void {\n    const btn = this.Button(featName);\n    btn.setOnClickListener(\n      this.View$OnClickListener((view) => {\n        fn();\n      }),\n    );\n    this.addFeature(btn);\n  }\n\n  /** @internal */\n  private Button(featName: string): Java.Wrapper {\n    const layoutParams = LinearLayout$LayoutParams.$new(\n      ViewGroup$LayoutParams.MATCH_PARENT.value,\n      ViewGroup$LayoutParams.MATCH_PARENT.value,\n    );\n    layoutParams.setMargins(7, 5, 7, 5);\n\n    const btn = Button.$new(this.context);\n    btn.setLayoutParams(layoutParams);\n    btn.setText(Html.fromHtml(featName));\n    btn.setAllCaps(false);\n    btn.setBackgroundColor(this.config.MENU_BUTTON_BG_COLOR);\n    btn.setTextColor(this.config.TEXT_COLOR_SECONDARY);\n    btn.setHintTextColor(this.config.TEXT_COLOR_SECONDARY);\n    btn.setHighlightColor(this.config.TEXT_COLOR_SECONDARY);\n\n    return btn;\n  }\n\n  private View$OnClickListener(fn: (view: Java.Wrapper) => void): Java.Wrapper {\n    return Java.registerClass({\n      name: `${className}_OnClickListener$${lambdaCounter()}`,\n      implements: [Java.use('android.view.View$OnClickListener')],\n      methods: { onClick: fn },\n    }).$new();\n  }\n\n  private SeekBar$OnSeekBarChangeListener({\n    onProgressChanged = (seekBar, progress, fromUser) => {},\n    onStartTrackingTouch = (seekBar) => {},\n    onStopTrackingTouch = (seekBar) => {},\n  }: {\n    onProgressChanged?: (seekBar: Java.Wrapper, progress: number, fromUser: boolean) => void;\n    onStartTrackingTouch?: (seekBar: Java.Wrapper) => void;\n    onStopTrackingTouch?: (seekBar: Java.Wrapper) => void;\n  }): Java.Wrapper {\n    return Java.registerClass({\n      name: `${className}_OnSeekBarChangeListener$${lambdaCounter()}`,\n      implements: [Java.use('android.widget.SeekBar$OnSeekBarChangeListener')],\n      methods: {\n        onProgressChanged,\n        onStartTrackingTouch,\n        onStopTrackingTouch,\n      },\n    }).$new();\n  }\n\n  /** @internal */\n  private CompoundButton$OnCheckedChangeListener(\n    fn: (buttonView: Java.Wrapper, isChecked: boolean) => void,\n  ): Java.Wrapper {\n    return Java.registerClass({\n      name: `${className}_OnCheckedChangeListener$${lambdaCounter()}`,\n      implements: [Java.use('android.widget.CompoundButton$OnCheckedChangeListener')],\n      methods: { onCheckedChanged: fn },\n    }).$new();\n  }\n\n  /** @internal */\n  private View$OnLongClickListener(fn: (view: Java.Wrapper) => void): Java.Wrapper {\n    return Java.registerClass({\n      name: `${className}_OnLongClickListener$${lambdaCounter()}`,\n      implements: [Java.use('android.view.View$OnLongClickListener')],\n      methods: {\n        onLongClick: function (view: Java.Wrapper): boolean {\n          fn(view);\n          return true;\n        },\n      },\n    }).$new();\n  }\n\n  /** @internal */\n  private DialogInterface$OnClickListener(fn: (dialog: Java.Wrapper, which: number) => void): Java.Wrapper {\n    return Java.registerClass({\n      name: `${className}_OnClickListener$${lambdaCounter()}`,\n      implements: [Java.use('android.content.DialogInterface$OnClickListener')],\n      methods: { onClick: fn },\n    }).$new();\n  }\n\n  /** @internal */\n  private View$OnTouchListener(): Java.Wrapper {\n    const menu = this;\n    const initialTouch = Point.$new(0, 0);\n    const initialPosition = Point.$new(0, 0);\n\n    return Java.registerClass({\n      name: `${className}_OnTouchListener$${lambdaCounter()}`,\n      implements: [Java.use('android.view.View$OnTouchListener')],\n      methods: {\n        onTouch(view: Java.Wrapper, motionEvent: Java.Wrapper): boolean {\n          switch (motionEvent.getAction()) {\n            case MotionEvent.ACTION_DOWN.value:\n              initialTouch.x.value = Math.round(motionEvent.getRawX());\n              initialTouch.y.value = Math.round(motionEvent.getRawY());\n              initialPosition.x.value = menu.position.x.value;\n              initialPosition.y.value = menu.position.y.value;\n\n              break;\n            case MotionEvent.ACTION_MOVE.value:\n              menu.rootFrame.setAlpha(0.5);\n              const x = initialPosition.x.value + Math.round(motionEvent.getRawX() - initialTouch.x.value);\n              const y = initialPosition.y.value + Math.round(motionEvent.getRawY() - initialTouch.y.value);\n              menu.position.x.value = x;\n              menu.position.y.value = y;\n              const params = Java.cast(menu.rootFrame.getLayoutParams(), WindowManager$LayoutParams);\n              params.x.value = x;\n              params.y.value = y;\n              menu.windowManager.updateViewLayout(menu.rootFrame, params);\n\n              break;\n            case MotionEvent.ACTION_UP.value:\n              menu.rootFrame.setAlpha(1);\n              const rawX = Math.round(motionEvent.getRawX() - initialTouch.x.value);\n              const rawY = Math.round(motionEvent.getRawY() - initialTouch.y.value);\n              if (rawX < 5 && rawY < 5 && menu.isCollapsed) menu.expandMenu();\n\n              break;\n            default:\n              return false;\n          }\n\n          return true;\n        },\n      },\n    }).$new();\n  }\n\n  /** @internal */\n  private dp(i: number): number {\n    const displayMetrics = this.context.getResources().getDisplayMetrics();\n    const result = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP.value, i, displayMetrics);\n    return Math.round(result);\n  }\n\n  /** @internal */\n  private convertDipToPixels(i: number): number {\n    const displayMetrics = this.context.getResources().getDisplayMetrics();\n    const result = i * displayMetrics.density.value + 0.5;\n    return Math.round(result);\n  }\n}\n","/**\n * Primitive class is a wrapper for primitive types to be used as a reference\n * @class Primitive\n * @template T\n */\nexport default class Primitive<T> {\n  private value: T;\n\n  /**\n   * Creates an instance of Primitive.\n   * @param value\n   */\n  constructor(value: T) {\n    this.value = value;\n  }\n\n  /**\n   * Returns the value of the primitive\n   */\n  get(): T {\n    return this.value;\n  }\n\n  /**\n   * Sets the value of the primitive\n   * @param value\n   */\n  set(value: T) {\n    this.value = value;\n  }\n\n  /**\n   * Shorthand for creating a new instance of Primitive\n   * @param value\n   */\n  public static of<T>(value: T): Primitive<T> {\n    return new Primitive(value);\n  }\n}\n"]}